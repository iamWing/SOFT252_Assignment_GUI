/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import models.AllocationRecord;
import models.Car;

/**
 *
 * @author FairyMental
 */
public class ManageAllocationHistoryPanel extends javax.swing.JPanel {

    Car currentCar;
    /**
     * Creates new form ManageAllocationHistoryPanel
     */
    public ManageAllocationHistoryPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listAllocationHistory = new javax.swing.JList<>();
        btnRemoveAllocationRecord = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        listAllocationHistory.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listAllocationHistoryValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listAllocationHistory);

        btnRemoveAllocationRecord.setText("Remove Allocation Record");
        btnRemoveAllocationRecord.setEnabled(false);
        btnRemoveAllocationRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAllocationRecordActionPerformed(evt);
            }
        });

        jLabel1.setText("Allocation History");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveAllocationRecord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveAllocationRecord)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listAllocationHistoryValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listAllocationHistoryValueChanged
        if(listAllocationHistory.getSelectedIndex() != -1 )
        {
            btnRemoveAllocationRecord.setEnabled(true);
        }
        else
        {
            btnRemoveAllocationRecord.setEnabled(false);
        }
    }//GEN-LAST:event_listAllocationHistoryValueChanged

    private void btnRemoveAllocationRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllocationRecordActionPerformed
        listAllocationHistory.getSelectedValue().DeleteAllocationRecord(listAllocationHistory.getSelectedValue());
        RefreshAllocationRecordList(currentCar);
    }//GEN-LAST:event_btnRemoveAllocationRecordActionPerformed
    
    public void RefreshAllocationRecordList(Car car)
    {
        currentCar = car;
        ArrayList<AllocationRecord> records = car.getAllocationRecords();
        System.out.println(records.size() + " ");
        DefaultListModel<AllocationRecord> model = new DefaultListModel<>();
        for(AllocationRecord rec : records)
        {
            model.addElement(rec);
        }
        listAllocationHistory.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRemoveAllocationRecord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<AllocationRecord> listAllocationHistory;
    // End of variables declaration//GEN-END:variables
}
